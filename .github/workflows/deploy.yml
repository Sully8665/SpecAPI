name: Deploy

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Deploy to Azure App Service (Staging)
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'specapi-staging'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        package: ./src/SpecAPI
        
    - name: Run smoke tests
      run: |
        # Wait for deployment to complete
        sleep 30
        
        # Create a simple smoke test
        echo "- name: 'Smoke Test - Health Check'" > smoke-test.yaml
        echo "  request:" >> smoke-test.yaml
        echo "    method: 'GET'" >> smoke-test.yaml
        echo "    url: '${{ secrets.STAGING_API_URL }}/health'" >> smoke-test.yaml
        echo "  expect:" >> smoke-test.yaml
        echo "    statusCode: 200" >> smoke-test.yaml
        
        # Run smoke test
        dotnet run --project src/SpecAPI/SpecAPI.csproj smoke-test.yaml
        
    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-staging
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Deploy to Azure App Service (Production)
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'specapi-production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PRODUCTION }}
        package: ./src/SpecAPI
        
    - name: Run production tests
      run: |
        # Wait for deployment to complete
        sleep 30
        
        # Create comprehensive production tests
        echo "variables:" > production-test.yaml
        echo "  base_url: '${{ secrets.PRODUCTION_API_URL }}'" >> production-test.yaml
        echo "" >> production-test.yaml
        echo "- name: 'Production Health Check'" >> production-test.yaml
        echo "  request:" >> production-test.yaml
        echo "    method: 'GET'" >> production-test.yaml
        echo "    url: '{{base_url}}/health'" >> production-test.yaml
        echo "  expect:" >> production-test.yaml
        echo "    statusCode: 200" >> production-test.yaml
        echo "    maxResponseTimeMs: 1000" >> production-test.yaml
        
        # Run production tests
        dotnet run --project src/SpecAPI/SpecAPI.csproj production-test.yaml
        
    - name: Update deployment status
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment: 'production'
          });
          
          if (deployments.length > 0) {
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployments[0].id,
              state: 'success',
              description: 'Production deployment completed successfully'
            });
          }
        
    - name: Notify production deployment
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: 'üöÄ SpecAPI has been deployed to production!'
      if: always()

  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    environment: production
    if: failure() && needs.deploy-production.result == 'failure'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Rollback to previous version
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'specapi-production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PRODUCTION }}
        package: ${{ secrets.PREVIOUS_DEPLOYMENT_PACKAGE }}
        
    - name: Notify rollback
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: '‚ö†Ô∏è Production deployment rolled back due to failure'
      if: always() 